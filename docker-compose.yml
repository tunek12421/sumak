version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: sumate-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sumate
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sumate-network

  # Backend API (Go)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sumate-backend
    restart: unless-stopped
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: sumate
      PORT: 8080
      BASE_URL: https://zta.148.230.91.96.nip.io
      UPLOADS_DIR: /root/uploads
    ports:
      - "8080:8080"
    volumes:
      - uploads_data:/root/uploads
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sumate-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend (Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sumate-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - sumate-network

  # Admin Backend API (Go)
  admin-backend:
    build:
      context: ./admin/backend
      dockerfile: Dockerfile
    container_name: sumate-admin-backend
    restart: unless-stopped
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: sumate
      PORT: 8081
      BASE_URL: https://zta.148.230.91.96.nip.io
      ADMIN_USER: admin
      ADMIN_PASSWORD: SumateAdmin2025!
    ports:
      - "8081:8081"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - sumate-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Admin Frontend (Nginx)
  admin-frontend:
    build:
      context: ./admin/frontend
      dockerfile: Dockerfile
    container_name: sumate-admin-frontend
    restart: unless-stopped
    ports:
      - "3001:80"
    depends_on:
      - admin-backend
    networks:
      - sumate-network

  # Landing Page (Nginx)
  landing:
    build:
      context: ./landing
      dockerfile: Dockerfile
    container_name: sumate-landing
    restart: unless-stopped
    ports:
      - "3002:80"
    networks:
      - sumate-network

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local

networks:
  sumate-network:
    driver: bridge
